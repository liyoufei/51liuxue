<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sss.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sss.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="userId" parameterType="com.sss.model.User">
    insert into user (user_id, name, password, 
      salt, phone, email, 
      status, avatar_url, created_date
      )
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{avatarUrl,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sss.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByEmail" parameterType="com.sss.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        salt = #{salt,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=INTEGER},
        email = #{email,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
        created_date = #{createdDate,jdbcType=TIMESTAMP}
    where email = #{email,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select user_id, name, password, salt, phone, email, status, avatar_url, created_date
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, name, password, salt, phone, email, status, avatar_url, created_date
    from user
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, name, password, salt, phone, email, status, avatar_url, created_date
    from user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, name, password, salt, phone, email, status, avatar_url, created_date
    from user
  </select>
</mapper>